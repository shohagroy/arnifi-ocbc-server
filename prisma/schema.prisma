// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider  = "postgresql"
//   url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

enum Role {
  super_admin
  admin
}

enum Gender {
  male
  female
}

model Country {
  id          String  @id @default(uuid())
  name        String  @unique
  countryCode String  @unique
  postalCode  String  @unique
  isActive    Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  addresses Address[]
  idTypes   IDType[]
  // formStep  FormStep[] // Define the one-to-one relation

  // formSteps FormStep[]
  stepFilds StepFild[]

  @@map("countries")
}

model FormStep {
  id     String @id @default(uuid())
  tittle String
  value  String @unique
  // countryId String?

  // country   Country?   @relation(fields: [countryId], references: [id])
  // country Country? @relation(fields: [countryId], references: [id])

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  stepFilds StepFild[]

  @@map("form_steps")
}

model Address {
  id         String  @id @default(uuid())
  line1      String
  line2      String?
  countryId  String
  postalCode String
  User       User?

  country Country @relation(fields: [countryId], references: [id])

  @@map("addresses")
}

model IDType {
  id        String @id @default(uuid())
  tittle    String @unique
  countryId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  country   Country  @relation(fields: [countryId], references: [id])

  @@map("id_types")
}

model StepFild {
  id          String  @id @default(uuid())
  name        String
  label       String
  placeholder String
  type        String
  errorText   String?
  countryId   String
  stepValue   String
  isRequired  Boolean @default(false)

  country  Country  @relation(fields: [countryId], references: [id])
  formStep FormStep @relation(fields: [stepValue], references: [value])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("step_filds")
}

model User {
  id        String   @id @default(uuid())
  fullName  String
  email     String   @unique
  password  String
  role      Role
  contact   String
  gender    Gender?
  addressId String?  @unique
  address   Address? @relation(fields: [addressId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}
